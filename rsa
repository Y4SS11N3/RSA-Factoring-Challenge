#!/usr/bin/env python3

import sys
import random

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollards_rho(n):
    if n % 2 == 0:
        return 2
    x = random.randint(1, n - 1)
    y = x
    c = random.randint(1, n - 1)
    d = 1
    while d == 1:
        x = (x*x + c) % n
        y = (y*y + c) % n
        y = (y*y + c) % n
        d = gcd(abs(x - y), n)
        if d != 1 and d != n:
            return d
    return None

def factorize(n):
    if n <= 1:
        return []
    prime_factor = pollards_rho(n)
    if prime_factor is None:
        return [n]
    return [prime_factor] + factorize(n // prime_factor)

def format_output(number, factors):
    if factors[0] < factors[1]:
        factors[0], factors[1] = factors[1], factors[0]
    return f"{number}={factors[0]}*{factors[1]}"


def main(file_path):
    with open(file_path, 'r') as file:
        n = int(file.readline().strip())
        factors = factorize(n)
        if len(factors) == 2 and all(factors):
            print(format_output(n, factors))
        else:
            print(f"No prime factors found for {n} within the time limit.")

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print('Usage: ./rsa <file>')
        sys.exit(1)
    main(sys.argv[1])
