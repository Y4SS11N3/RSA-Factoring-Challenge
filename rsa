#!/usr/bin/env python3

import sys
from subprocess import Popen, PIPE
import random
import math

def main(file_path):
    with open(file_path, 'r') as file:
        for line in file:
            number = int(line.strip())
            factor1, factor2 = factorize_number(number)
            print(f"{number}={factor1}*{factor2}")

def factorize_number(n):
    if n <= 1:
        return (n, 1)

    # Check for small prime factors first
    for i in range(2, int(math.sqrt(n)) + 1):
        if n % i == 0:
            return (i, n // i)

    # Fallback to Pollard's Rho if small factors not found
    factor = pollards_rho(n)
    return (factor, n // factor) if factor != 1 else (n, 1)

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollards_rho(n):
    if n % 2 == 0:
        return 2
    x = random.randint(1, n-1)
    y = x
    c = random.randint(1, n-1)
    d = 1
    while d == 1:
        x = (x*x + c) % n
        y = (y*y + c) % n
        y = (y*y + c) % n
        d = gcd(abs(x-y), n)
        if d == n:
            return 1
    return d

if __name__ == '__main__':
    if len(sys.argv) != 2:
        print('Usage: ./rsa <file>')
        sys.exit(1)
    main(sys.argv[1])
