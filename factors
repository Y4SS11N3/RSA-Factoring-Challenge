#!/usr/bin/env python3
import sys
from subprocess import Popen, PIPE
import random

def main(file_path):
    with open(file_path, 'r') as file:
        for line in file:
            number = int(line.strip())
            factor1, factor2 = factorize_first_pair(number)
            if factor1 < factor2:
                factor1, factor2 = factor2, factor1
            print(f"{number}={factor1}*{factor2}")

def factorize_first_pair(n):
    try:
        process = Popen(['factor', str(n)], stdout=PIPE)
        (output, _) = process.communicate()
        output = output.decode('utf-8').strip()
        _, factors_str = output.split(': ')
        factors = factors_str.split(' ')
        first_factor = int(factors[0])
        second_factor = n // first_factor
        return (first_factor, second_factor)
    except:
        # Fallback to Pollard's Rho if factor command fails
        factor = pollards_rho(n)
        if factor == 1:
            return (n, 1)
        else:
            return (factor, n // factor)

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def pollards_rho(n):
    if n % 2 == 0:
        return 2
    x = random.randint(1, n-1)
    y = x
    c = random.randint(1, n-1)
    d = 1
    while d == 1:
        x = (x*x + c) % n
        y = (y*y + c) % n
        y = (y*y + c) % n
        d = gcd(abs(x-y), n)
    if d == n:
        return 1
    return d

if __name__ == 'main':
    if len(sys.argv) != 2:
        print('Usage: ./factors <file>')
        sys.exit(1)
    main(sys.argv[1])
